{"version":3,"sources":["components/layout/Navbar.jsx","context/github/GithubState.js","context/alert/alertContaxt.js","components/layout/Alert.jsx","components/pages/About.jsx","components/layout/spinner.gif","components/layout/Spinner.jsx","components/repos/RepoItem.jsx","components/repos/Repos.jsx","context/github/githubContext.js","components/users/User.jsx","components/users/Search.jsx","components/users/UserItem.jsx","components/users/Users.jsx","components/pages/Home.jsx","components/pages/NotFound.jsx","context/type.js","context/github/githubReducer.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.jsx","index.js"],"names":["Navbar","icon","title","className","to","defaultProps","githubClientId","githubClientSecret","alertContext","createContext","Alert","alert","useContext","AlertContext","type","message","About","Spinner","src","spinner","alt","style","width","margin","display","RepoItem","repo","href","html_url","name","Repos","repos","map","id","githubContext","User","GithubContext","getUser","loading","user","getUserRepos","match","useRouteMatch","useEffect","params","login","avatar_url","location","bio","blog","company","followers","following","public_repos","public_gists","Search","useState","text","setText","onSubmit","event","preventDefault","setAlert","searchUsers","value","placeholder","onChange","target","users","length","onClick","clearUsers","UserItem","userStyle","gridTemplateColumns","gap","Users","Home","NotFound","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","SET_ALERT","REMOVE_ALERT","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","GithubReducer","dispatch","a","setLoading","axios","get","res","data","items","username","Provider","children","AlertState","AlertReducer","setTimeout","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAIMA,G,MAAS,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACE,sBAAKC,UAAU,oBAAf,UACE,+BACE,mBAAGA,UAAWF,IADhB,IAC4BC,KAE5B,+BACE,6BACE,cAAC,IAAD,CAAME,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,6BAOVJ,EAAOK,aAAe,CACpBH,MAAO,gBACPD,KAAM,iBAQOD,ICpBXM,EACAC,EDmBWP,IE5BAQ,EAFMC,0BCeNC,EAdD,WACZ,IAEQC,EAFaC,qBAAWC,GAExBF,MAER,OACY,OAAVA,GACE,sBAAKR,UAAS,sBAAiBQ,EAAMG,MAArC,UACE,mBAAGX,UAAU,uBADf,IACwCQ,EAAMI,YCCrCC,EAVD,WACZ,OACE,qCACE,gDACA,2DACA,mDCPS,MAA0B,oCCa1BC,EAVC,kBACd,cAAC,WAAD,UACE,qBACEC,IAAKC,EACLC,IAAI,aACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,cCSzCC,EAdE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,qBAAKvB,UAAU,OAAf,SACE,6BACE,mBAAGwB,KAAMD,EAAKE,SAAd,SAAyBF,EAAKG,YCKvBC,EARD,SAAC,GACb,OAD2B,EAAZC,MACFC,KAAI,SAACN,GAAD,OAAU,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKO,QCD9CC,EAFOzB,0BCyGP0B,EApGF,WACX,IAAMD,EAAgBtB,qBAAWwB,GAEzBC,EAAgDH,EAAhDG,QAASC,EAAuCJ,EAAvCI,QAASC,EAA8BL,EAA9BK,KAAMR,EAAwBG,EAAxBH,MAAOS,EAAiBN,EAAjBM,aAEjCC,EAAQC,YAAc,gBAE5BC,qBAAU,WACRN,EAAQI,EAAMG,OAAOC,OACrBL,EAAaC,EAAMG,OAAOC,SAEzB,IAXc,IAcfhB,EAYEU,EAZFV,KACAiB,EAWEP,EAXFO,WACAC,EAUER,EAVFQ,SACAC,EASET,EATFS,IACAC,EAQEV,EARFU,KACAJ,EAOEN,EAPFM,MACAK,EAMEX,EANFW,QACAtB,EAKEW,EALFX,SACAuB,EAIEZ,EAJFY,UACAC,EAGEb,EAHFa,UACAC,EAEEd,EAFFc,aACAC,EACEf,EADFe,aAGF,OAAIhB,EAAgB,cAAC,EAAD,IAGlB,eAAC,WAAD,WACE,cAAC,IAAD,CAAMlC,GAAG,IAAID,UAAU,gBAAvB,4BASA,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBACEe,IAAK4B,EACL3C,UAAU,YACViB,IAAI,GACJC,MAAO,CAAEC,MAAO,WAElB,6BAAKO,IACL,2CAAckB,QAEhB,gCACGC,GACC,qCACE,qCACA,4BAAIA,OAGR,mBAAGrB,KAAMC,EAAUzB,UAAU,oBAA7B,kCAGA,+BACE,6BACG0C,GACC,qCACE,gDADF,IAC+BA,OAKnC,6BACGK,GACC,qCACE,+CADF,IAC8BA,OAKlC,6BACGD,GACC,qCACE,+CADF,IAC8BA,gBAOxC,sBAAK9C,UAAU,mBAAf,UACE,sBAAKA,UAAU,sBAAf,wBAAiDgD,KACjD,sBAAKhD,UAAU,sBAAf,wBAAiDiD,KACjD,sBAAKjD,UAAU,oBAAf,2BAAkDkD,KAClD,sBAAKlD,UAAU,mBAAf,2BAAiDmD,QAEnD,cAAC,EAAD,CAAOvB,MAAOA,Q,QCpDLwB,EA9CA,WACb,IAAMrB,EAAgBtB,qBAAWwB,GAC3B5B,EAAeI,qBAAWC,GAFb,EAIK2C,mBAAS,IAJd,mBAIZC,EAJY,KAINC,EAJM,KAkBnB,OACE,gCACE,uBAAMC,SAZO,SAACC,GAChBA,EAAMC,iBACO,KAATJ,EACFjD,EAAasD,SAAS,yBAA0B,UAEhD5B,EAAc6B,YAAYN,GAC1BC,EAAQ,MAMkBvD,UAAU,OAApC,UACE,uBACEW,KAAK,OACLe,KAAK,OACLmC,MAAOP,EACPQ,YAAY,kBACZC,SApBS,SAACN,GAAD,OAAWF,EAAQE,EAAMO,OAAOH,UAsB3C,uBACElD,KAAK,SACLkD,MAAM,SACN7D,UAAU,8BAGb+B,EAAckC,MAAMC,OAAS,GAC5B,wBACElE,UAAU,0BACVmE,QAASpC,EAAcqC,WAFzB,uBCXOC,EAxBE,SAAC,GAA+C,IAAD,IAA5CjC,KAAQM,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,WAA6B,EAAjBlB,SAC7C,OACE,sBAAKzB,UAAU,mBAAf,UACE,qBACEe,IAAK4B,EACL1B,IAAI,SACJjB,UAAU,YACVkB,MAAO,CAAEC,MAAO,UAElB,6BAAKuB,IAEL,8BACE,cAAC,IAAD,CAAMzC,GAAE,gBAAWyC,GAAS1C,UAAU,2BAAtC,wBCOFsE,EAAY,CAChBjD,QAAS,OACTkD,oBAAqB,iBACrBC,IAAK,QAGQC,EAxBD,WACZ,IAAM1C,EAAgBtB,qBAAWwB,GAEzBE,EAAmBJ,EAAnBI,QAAS8B,EAAUlC,EAAVkC,MAEjB,OAAI9B,EACK,cAAC,EAAD,IAGL,qBAAKjB,MAAOoD,EAAZ,SACGL,EAAMpC,KAAI,SAACO,GAAD,OACT,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKN,UCLf4C,EAPF,kBACX,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCIWC,EATE,WACf,OACE,gCACE,2CACA,mBAAG3E,UAAU,OAAb,gE,iDCNO4E,EAAe,eACfC,EAAW,WACXC,EAAc,cACdC,EAAY,YACZC,EAAc,cACdC,EAAY,YACZC,EAAe,eCGb,WAACC,EAAOC,GACrB,OAAQA,EAAOzE,MACb,KAAKiE,EACH,OAAO,2BACFO,GADL,IAEElB,MAAOmB,EAAOC,QACdlD,SAAS,IAEb,KAAK0C,EACH,OAAO,2BACFM,GADL,IAEE/C,KAAMgD,EAAOC,QACblD,SAAS,IAEb,KAAK4C,EACH,OAAO,2BACFI,GADL,IAEEvD,MAAOwD,EAAOC,QACdlD,SAAS,IAEb,KAAK2C,EACH,OAAO,2BACFK,GADL,IAEElB,MAAO,GACP9B,SAAS,IAEb,KAAK6C,EACH,OAAO,2BACFG,GADL,IAEEhD,SAAS,IAEb,QACE,OAAOgD,IhBtBXhF,EAAiBmF,wRAAYC,iBAC7BnF,EAAqBkF,wRAAYE,qBAGnC,IA4EeC,EA5EK,SAACC,GACnB,IAD6B,EAQHC,qBAAWC,EAPhB,CACnB3B,MAAO,GACP7B,KAAM,GACNR,MAAO,GACPO,SAAS,IALkB,mBAQtBgD,EARsB,KAQfU,EARe,KAWvBjC,EAAW,uCAAG,WAAON,GAAP,eAAAwC,EAAA,6DAClBC,IADkB,SAGAC,IAAMC,IAAN,gDACyB3C,EADzB,sBAC2CnD,EAD3C,0BAC2EC,IAJ3E,OAGZ8F,EAHY,OAOlBL,EAAS,CACPlF,KAAMiE,EACNS,QAASa,EAAIC,KAAKC,QATF,2CAAH,sDAcXlE,EAAO,uCAAG,WAAOmE,GAAP,eAAAP,EAAA,6DACdC,IADc,SAGIC,IAAMC,IAAN,uCACgBI,EADhB,sBACsClG,EADtC,0BACsEC,IAJ1E,OAGR8F,EAHQ,OAOdL,EAAS,CACPlF,KAAMkE,EACNQ,QAASa,EAAIC,OATD,2CAAH,sDAcP9D,EAAY,uCAAG,WAAOgE,GAAP,eAAAP,EAAA,6DACnBC,IADmB,SAGDC,IAAMC,IAAN,uCACgBI,EADhB,wDACwElG,EADxE,0BACwGC,IAJvG,OAGb8F,EAHa,OAOnBL,EAAS,CACPlF,KAAMoE,EACNM,QAASa,EAAIC,OATI,2CAAH,sDAiBZJ,EAAa,kBAAMF,EAAS,CAAElF,KAAMqE,KAE1C,OACE,cAAC,EAAcsB,SAAf,CACEzC,MAAO,CACLI,MAAOkB,EAAMlB,MACb7B,KAAM+C,EAAM/C,KACZD,QAASgD,EAAMhD,QACfP,MAAOuD,EAAMvD,MACbgC,cACAQ,WAba,kBAAMyB,EAAS,CAAElF,KAAMmE,KAcpC5C,UACAG,gBATJ,SAYGqD,EAAMa,YiB3FE,WAACpB,EAAOC,GACrB,OAAQA,EAAOzE,MACb,KAAKsE,EACH,OAAOG,EAAOC,QAChB,KAAKH,EACH,OAAO,KACT,QACE,OAAOC,ICqBEqB,EA1BI,SAACd,GAClB,IAD4B,EAGFC,qBAAWc,EAFhB,MADO,mBAGrBtB,EAHqB,KAGdU,EAHc,KAc5B,OACE,cAAC,EAAaS,SAAd,CACEzC,MAAO,CACLrD,MAAO2E,EACPxB,SAZW,SAAC/C,EAASD,GACzBkF,EAAS,CACPlF,KAAMsE,EACNI,QAAS,CAAEzE,UAASD,UAEtB+F,YAAW,kBAAMb,EAAS,CAAElF,KAAMuE,MAAiB,OAInD,SAMGQ,EAAMa,YCkBEI,EA/BH,WACV,OACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,sBAAK3G,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,sB,MC5BlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e9bb1a3a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <nav className=\"navbar bg-primary\">\r\n      <h1>\r\n        <i className={icon}></i> {title}\r\n      </h1>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Github Finder',\r\n  icon: 'fab fa-github',\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\n  SEARCH_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n} from '../type';\r\n\r\nlet githubClientId;\r\nlet githubClientSecret;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\r\n} else {\r\n  githubClientId = process.env.GITHUB_CLIENT_ID;\r\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\r\n}\r\n\r\nconst GithubState = (props) => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    loading: false,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n  // Search Users\r\n  const searchUsers = async (text) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items,\r\n    });\r\n  };\r\n\r\n  // Get User\r\n  const getUser = async (username) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  // Get Repos\r\n  const getUserRepos = async (username) => {\r\n    setLoading();\r\n\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\r\n    );\r\n\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data,\r\n    });\r\n  };\r\n\r\n  // Clear Users\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n  // Set Loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        loading: state.loading,\r\n        repos: state.repos,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;\r\n","import React, { useContext } from 'react';\r\nimport AlertContext from '../../context/alert/alertContaxt';\r\n\r\nconst Alert = () => {\r\n  const alertContaxt = useContext(AlertContext);\r\n\r\n  const { alert } = alertContaxt;\r\n\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className=\"fas fa-info-circle\" /> {alert.message}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <h1>About This App</h1>\r\n      <p>App to search Github users</p>\r\n      <p>Version: 1.0.0</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src={spinner}\r\n      alt=\"Loading...\"\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RepoItem = ({ repo }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>\r\n        <a href={repo.html_url}>{repo.name}</a>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nRepoItem.propTypes = {\r\n  repo: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default RepoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RepoItem from './RepoItem';\r\n\r\nconst Repos = ({ repos }) => {\r\n  return repos.map((repo) => <RepoItem repo={repo} key={repo.id} />);\r\n};\r\n\r\nRepos.propTypes = {\r\n  repos: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Repos;\r\n","import { createContext } from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;\r\n","import React, { useEffect, Fragment, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport Repos from '../repos/Repos';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\nconst User = () => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\r\n\r\n  const match = useRouteMatch('/user/:login');\r\n\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    company,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/\" className=\"btn btn-light\">\r\n        Back to Search\r\n      </Link>\r\n      {/* Hireable: {' '}\r\n        {hireable ? (\r\n          <i className=\"fas fa-check text-success\" />\r\n        ) : (\r\n          <i className=\"fas fa-times-circle text-danger\" />\r\n        )} */}\r\n      <div className=\"card grid-2\">\r\n        <div className=\"all-center\">\r\n          <img\r\n            src={avatar_url}\r\n            className=\"round-img\"\r\n            alt=\"\"\r\n            style={{ width: '150px' }}\r\n          />\r\n          <h1>{name}</h1>\r\n          <p>Location: {location}</p>\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </>\r\n          )}\r\n          <a href={html_url} className=\"btn btn-dark my-1\">\r\n            Visit Github Profile\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <>\r\n                  <strong>Username: </strong> {login}\r\n                </>\r\n              )}\r\n            </li>\r\n\r\n            <li>\r\n              {company && (\r\n                <>\r\n                  <strong>Company: </strong> {company}\r\n                </>\r\n              )}\r\n            </li>\r\n\r\n            <li>\r\n              {blog && (\r\n                <>\r\n                  <strong>Website: </strong> {blog}\r\n                </>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"card text-center\">\r\n        <div className=\"badge badge-primary\">Followers: {followers}</div>\r\n        <div className=\"badge badge-success\">Following: {following}</div>\r\n        <div className=\"badge badge-light\">Public_Repos: {public_repos}</div>\r\n        <div className=\"badge badge-dark\">Public_Gists: {public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useState, useContext } from 'react';\r\nimport AlertContext from '../../context/alert/alertContaxt';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const [text, setText] = useState('');\r\n\r\n  const onChange = (event) => setText(event.target.value);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (text === '') {\r\n      alertContext.setAlert('Please enter something', 'light');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"text\"\r\n          value={text}\r\n          placeholder=\"Search Users...\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Search\"\r\n          className=\"btn btn-dark btn-block\"\r\n        />\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          className=\"btn btn-light btn-block\"\r\n          onClick={githubContext.clearUsers}\r\n        >\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <img\r\n        src={avatar_url}\r\n        alt=\"avatar\"\r\n        className=\"round-img\"\r\n        style={{ width: '60px' }}\r\n      />\r\n      <h3>{login}</h3>\r\n\r\n      <div>\r\n        <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my-1\">\r\n          More\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useContext } from 'react';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n\r\n  const { loading, users } = githubContext;\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map((user) => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst userStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gap: '1rem',\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst Home = () => (\r\n  <>\r\n    <Search />\r\n    <Users />\r\n  </>\r\n);\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Not Found</h1>\r\n      <p className=\"lead\">The page you are looking for does not exist...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import {\r\n  SEARCH_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n} from '../type';\r\n\r\n// eslint-disable-next-line\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { SET_ALERT, REMOVE_ALERT } from '../type';\r\n\r\n// eslint-disable-next-line\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n    case REMOVE_ALERT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContaxt';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../type';\r\n\r\nconst AlertState = (props) => {\r\n  const initialState = null;\r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  // set Alert\r\n  const setAlert = (message, type) => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { message, type },\r\n    });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alert: state,\r\n        setAlert,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport User from './components/users/User';\nimport Home from './components/pages/Home';\nimport NotFound from './components/pages/NotFound';\n\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"container\">\n              <Alert />\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route exact path=\"/about\">\n                  <About />\n                </Route>\n                <Route exact path=\"/user/:login\">\n                  <User />\n                </Route>\n                <Route>\n                  <NotFound />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}